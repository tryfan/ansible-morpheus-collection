# .github/workflows/manual.yml

name: Build Collection
on: [workflow_dispatch]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Prerequisite install
        run: |
          sudo apt remove ansible
          sudo pip install ansible
          
      - name: Build collection
        run: |
          cd $GITHUB_WORKSPACE
          ansible-galaxy collection build
      
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::$(echo dev)

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.2.0
        with:
          # Artifact name
          name: "morpheusdata-morpheus-${{ steps.get_version.outputs.VERSION }}.tar.gz" # optional, default is artifact
          # A file, directory or wildcard pattern that describes what to upload
          path: /home/runner/work/ansible-morpheus-collection/ansible-morpheus-collection/*.tar.gz
          # The desired behavior if no files are found using the provided path.
      #Available Options:
        #warn: Output a warning but do not fail the action
        #error: Fail the action with an error message
        #ignore: Do not output any warnings or errors, the action does not fail

          if-no-files-found: error
          # Duration after which artifact will expire in days. 0 means using default retention.
      #Minimum 1 day. Maximum 90 days unless changed from the repository settings page.

          retention-days: 10
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: master
          release_name: Release Master Draft
          draft: true
          prerelease: true
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: "/home/runner/work/ansible-morpheus-collection/ansible-morpheus-collection/morpheusdata-morpheus-${{ steps.get_version.outputs.VERSION }}.tar.gz"
          asset_name: "ansible-morpheus-collection-${{ steps.get_version.outputs.VERSION }}.tar.gz"
          asset_content_type: "application/gzip"
